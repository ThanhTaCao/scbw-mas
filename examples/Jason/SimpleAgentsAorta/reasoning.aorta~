
%Enacting and deacting of roles
role(gatherer) : bel(me(Me)), ~org(rea(Me,builder))  => enact(gatherer).
role(scout) :  true => enact(scout).
~role(scout) : bel(sufficientMap) => deact(scout).
role(builder) : bel(me(Me))  => enact(builder).
~role(builder) : bel(me(Me)), org(rea(Me,scout)), org(rea(Me,builder)) => deact(builder).

% tell others about enacting roles
send(_,tell,org(rea(Me,R))) : bel(me(Me), agent(A), A \= Me), ~bel(sent(A, org(rea(Me,R)))) => send(A, org(rea(Me,R))).

% tell others about dependency roles
send(Role,tell,bel(X)) : bel(me(Me), agent(A), A \= Me), org(rea(A,Role)), ~bel(sent(A, bel(X))) => send(A, bel(X)).

%~role(R) : bel(me(Me)), ~org(viol(Me,R,_)) => deact(R).
obj(O) : ~goal(O) => commit(O).


